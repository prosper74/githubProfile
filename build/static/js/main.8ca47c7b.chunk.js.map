{"version":3,"sources":["graphql/Queries.js","pages/home/Home.jsx","pages/profile/Header.jsx","pages/profile/recharts/Activities.jsx","pages/profile/recharts/LanguageChart.jsx","pages/profile/recharts/MostStarred.jsx","pages/profile/Charts.jsx","pages/profile/Repo.jsx","pages/profile/Profile.jsx","App.jsx","index.js"],"names":["headers","Authorization","Home","history","useHistory","useState","loading","setLoading","error","setError","useForm","register","handleSubmit","onSubmit","data","e","a","githubUserName","username","query","fetch","method","body","JSON","stringify","res","json","user","localStorage","setItem","parse","getItem","push","className","htmlFor","type","id","placeholder","name","required","disabled","src","alt","Header","href","url","target","rel","twitterUsername","avatarUrl","login","bio","Today","Date","createdAt","toDateString","Room","location","repositories","nodes","length","followers","totalCount","following","IconButton","ArrowBack","onClick","window","replace","uv","pv","amt","Activities","AreaChart","width","height","fontSize","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","stroke","fill","value","COLORS","RADIAN","Math","PI","LanguageChart","PieChart","Pie","cx","cy","labelLine","label","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","map","entry","Cell","MostStarred","style","ResponsiveContainer","ComposedChart","scale","Legend","Bar","barSize","Line","Charts","Repo","repo","d","size","description","backgroundColor","primaryLanguage","color","stargazerCount","forkCount","diskUsage","Profile","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ca47c7b.chunk.js","sourcesContent":["// this is the github access token\r\nconst accessToken = process.env.REACT_APP_ACCESS_TOKEN\r\n\r\n// query to choose the data we want to get from github GraphQL API\r\nexport const getQuery = (githubUserName) => `query {\r\n\tuser(login: \"${githubUserName}\") {\r\n\t\t\tavatarUrl\r\n\t\t\tname\r\n\t\t\tbio\r\n\t\t\tlogin\r\n\t\t\tlocation\r\n\t\t\tcreatedAt\r\n\t\t\turl\r\n\t\t\ttwitterUsername\r\n\t\t\tfollowers {\r\n\t\t\t\ttotalCount \r\n\t\t\t}\r\n\t\t\tfollowing {\r\n\t\t\t\ttotalCount \r\n\t\t\t}\r\n\t\t\trepositories(last: 10) {\r\n\t\t\t\tnodes {\r\n\t\t\t\t\tname\r\n\t\t\t\t\turl\r\n\t\t\t\t\tcreatedAt\r\n\t\t\t\t\tstargazerCount\r\n\t\t\t\t\tforkCount\r\n\t\t\t\t\tdescription\r\n\t\t\t\t\tdiskUsage\r\n\t\t\t\t\tprimaryLanguage {\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t\tcolor\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n}\r\n`;\r\n\r\n// github graphql API end point\r\nexport const baseUrl = \"https://api.github.com/graphql\";\r\n\r\n// github graphql API header: this is where you put your github access token\r\nexport const headers = {\r\n  \"Content-Type\": \"application/json\",\r\n  Authorization: \"bearer \" + accessToken,\r\n};\r\n","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./home.scss\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport { headers, baseUrl, getQuery } from \"../../graphql/Queries\";\r\n\r\nfunction Home() {\r\n  let history = useHistory();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  // this is the function that handles the submit button of the form\r\n  const onSubmit = async (data, e) => {\r\n    setError(false);\r\n    setLoading(true);\r\n\r\n    // Collect the username passed in the form and send it to the query\r\n    let query = getQuery(data.username);\r\n\r\n    // this is where we fetch the data from github GraphQL API using the github username\r\n    let res = await fetch(baseUrl, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify({\r\n        query,\r\n      }),\r\n    });\r\n    let json = await res.json();\r\n    const user = json.data.user;\r\n    localStorage.setItem(\"user\", JSON.stringify(user))\t\t\r\n    \r\n\t\tif(user === null) {\r\n\t\t\tsetError(true);\r\n\t\t\tsetLoading(false);\r\n\t\t} else {\r\n\t\t\tJSON.parse(localStorage.getItem(\"user\"));\r\n\t\t\tsetError(false);\t\t\t\r\n\t\t\tsetLoading(false);\r\n\t\t\thistory.push(\"/profile\");\r\n\t\t}\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"homeMain\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"intro\">\r\n          <GitHubIcon className=\"gitIcon\" />\r\n          <h1 className=\"title\">GitHub Profiler</h1>\r\n          <p className=\"description\">\r\n            A simple app to fetch github user and display the information in a\r\n            nice modern card design{\" \"}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"inputSection\">\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <label htmlFor=\"githubUsername\">Enter username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"githubUsername\"\r\n              className=\"inputField\"\r\n              placeholder=\"Valid Github username\"\r\n              name=\"username\"\r\n              {...register(\"username\", { required: true })}\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {error && <div className=\"errorMsg\">User not found!!!</div>}\r\n\r\n        <div className=\"footerSection\">\r\n          designed and developed by Prosper Atu\r\n          <img src=\"assets/prospernew.png\" alt=\"\" className=\"img\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import \"./header.scss\";\r\nimport { Room, Today, ArrowBack } from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {\r\n  UitGithubAlt,\r\n  UitLinkedinAlt,\r\n  UitTwitterAlt,\r\n} from \"@iconscout/react-unicons-thinline\";\r\n\r\nfunction Header() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const backHome = () => {\r\n    window.location.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"headerTop\">\r\n        <div className=\"headerSocials\">\r\n          <a\r\n            href={user.url}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"socialIcons\"\r\n          >\r\n            <UitGithubAlt />\r\n          </a>\r\n          <a\r\n            href=\"https://linkedin.com\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"socialIcons\"\r\n          >\r\n            <UitLinkedinAlt />\r\n          </a>\r\n          <a\r\n            href={\"https://twitter.com/\" + user.twitterUsername}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"socialIcons\"\r\n          >\r\n            <UitTwitterAlt />\r\n          </a>\r\n        </div>\r\n\r\n        <img src={user.avatarUrl} alt=\"\" />\r\n      </div>\r\n\r\n      <h1 className=\"githubName\">Hi, I am {user.name}</h1>\r\n      <h4>@{user.login}</h4>\r\n      <p>{user.bio}</p>\r\n\r\n      <div className=\"info\">\r\n        <Today className=\"infoIcon\" /> Joined: &nbsp;\r\n        {new Date(user.createdAt).toDateString()}\r\n        <Room className=\"infoIcon lastChild\" />\r\n        {user.location}\r\n      </div>\r\n\r\n      <div className=\"repoInfo\">\r\n        <div className=\"circleShape\">\r\n          <div className=\"number\">{user.repositories.nodes.length}</div>\r\n          Repository\r\n        </div>\r\n        <div className=\"circleShape center\">\r\n          <div className=\"number\">{user.followers.totalCount}</div>\r\n          Followers\r\n        </div>\r\n        <div className=\"circleShape\">\r\n          <div className=\"number\">{user.following.totalCount}</div>\r\n          Following\r\n        </div>\r\n      </div>\r\n\r\n      <IconButton>\r\n        <ArrowBack className=\"backIcon\" onClick={backHome} />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000\r\n  }\r\n];\r\n\r\nexport default function Activities() {\r\n  return (\r\n    <AreaChart\r\n      width={300}\r\n      height={270}\r\n\t\t\tfontSize={12}\r\n      data={data}\r\n      margin={{\r\n        top: 20,\r\n        right: 10,\r\n        left: -20,\r\n        bottom: 0\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n    </AreaChart>\r\n  );\r\n}\r\n","import { PieChart, Pie, Cell } from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"Group A\", value: 400 },\r\n  { name: \"Group B\", value: 300 },\r\n  { name: \"Group C\", value: 300 },\r\n];\r\n\r\nconst COLORS = [\r\n  \"rgb(168, 0, 168)\",\r\n  \"rgb(46, 4, 235)\",\r\n  \"rgb(0, 133, 138)\",\r\n  \"#FF8042\",\r\n];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nfunction LanguageChart() {\r\n  const renderCustomizedLabel = ({\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    percent,\r\n    index,\r\n  }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        fill=\"white\"\r\n        textAnchor={x > cx ? \"start\" : \"end\"}\r\n        dominantBaseline=\"central\"\r\n      >\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <PieChart width={250} height={250}>\r\n      <Pie\r\n        data={data}\r\n        cx={120}\r\n        cy={100}\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n        outerRadius={80}\r\n        fill=\"#8884d8\"\r\n        dataKey=\"value\"\r\n      >\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n        ))}\r\n      </Pie>\r\n    </PieChart>\r\n  );\r\n}\r\n\r\nexport default LanguageChart;\r\n","import React, { PureComponent } from 'react';\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Line,\r\n  Area,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 590,\r\n    pv: 800,\r\n    amt: 1400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 868,\r\n    pv: 967,\r\n    amt: 1506,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 1397,\r\n    pv: 1098,\r\n    amt: 989,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 1480,\r\n    pv: 1200,\r\n    amt: 1228,\r\n  },\r\n];\r\n\r\nfunction MostStarred() {\r\n    return (\r\n      <div style={{ width: '100%', height: 300, fontSize: \".75rem\" }}>\r\n        <ResponsiveContainer>\r\n          <ComposedChart\r\n            width={250}\r\n            height={250}\r\n            data={data}\r\n            margin={{\r\n              top: 20,\r\n              right: 10,\r\n              bottom: 10,\r\n              left: -20,\r\n            }}\r\n          >\r\n            <CartesianGrid stroke=\"#f5f5f5\" />\r\n            <XAxis dataKey=\"name\" scale=\"band\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Area type=\"monotone\" dataKey=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" />\r\n            <Bar dataKey=\"pv\" barSize={15} fill=\"#413ea0\" />\r\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MostStarred;\r\n","import \"./charts.scss\";\r\nimport Activities from \"./recharts/Activities\";\r\nimport LanguageChart from \"./recharts/LanguageChart\";\r\nimport MostStarred from \"./recharts/MostStarred\";\r\n\r\nfunction Charts() {\r\n  return (\r\n    <div className=\"charts section\">\r\n      <div className=\"cards grid\">\r\n        <div className=\"card\">\r\n          <h2>Top Languages</h2>\r\n          <div className=\"languages\">\r\n            <div className=\"language\">\r\n              Javascript <div className=\"rectangle first\"></div>\r\n            </div>\r\n            <div className=\"language\">\r\n              HTML <div className=\"rectangle second\"></div>\r\n            </div>\r\n            <div className=\"language\">\r\n              CSS <div className=\"rectangle third\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pieChart\">\r\n            <LanguageChart />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <h2>Most Starred</h2>\r\n\r\n          <div className=\"pieChart\">\r\n            <MostStarred />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <h2>Activities</h2>\r\n\r\n          <div className=\"pieChart\">\r\n            <Activities />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Charts;\r\n","import \"./repo.scss\";\r\nimport {\r\n  UilLayersAlt,\r\n  UilAngleRight,\r\n  UilStar,\r\n  UilCodeBranch,\r\n} from \"@iconscout/react-unicons\";\r\n\r\nfunction Repo() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const repo = user.repositories.nodes;\r\n\r\n  return (\r\n    <div className=\"repo section\">\r\n      <h2 className=\"repoTitle\">Latest Repositories</h2>\r\n      <div className=\"repoContainer grid\">\r\n        {/* this is the repository card */}\r\n\r\n        {repo.map((d) => (\r\n          <a href={d.url} target=\"_blank\" className=\"repoContent\">\r\n            <div>\r\n              {/* Repository title and description */}\r\n              <UilLayersAlt size=\"30\" className=\"repoIcon\" />\r\n              <h3 className=\"repoTitle\">{d.name}</h3>\r\n              <p className=\"repoDescription\">{d.description}</p>\r\n            </div>\r\n\r\n            {/* Languaga used, star rating, forked and repo size */}\r\n            <div className=\"repoMeta\">\r\n              <div className=\"leftMeta\">\r\n                {/* Language  */}\r\n                <div className=\"language\">\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: d.primaryLanguage === null ? \"\" : d.primaryLanguage.color,\r\n                    }}\r\n                    className=\"circle\"\r\n                  ></div>\r\n\r\n                  {d.primaryLanguage === null ? \"\" : d.primaryLanguage.name}\r\n                </div>\r\n\r\n                {/* star rating */}\r\n                <div className=\"starRating\">\r\n                  <UilStar size=\"15\" />\r\n                  {d.stargazerCount}\r\n                </div>\r\n\r\n                {/* forked */}\r\n                <div className=\"forked\">\r\n                  <UilCodeBranch size=\"15\" />\r\n                  {d.forkCount}\r\n                </div>\r\n              </div>\r\n\r\n              {/* repo size */}\r\n              <div className=\"repoSize\">{d.diskUsage} KB</div>\r\n            </div>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Repo;\r\n","import \"./profile.scss\";\r\nimport Header from \"./Header\"\r\nimport Charts from \"./Charts\";\r\nimport Repo from \"./Repo\";\r\n\r\nfunction Profile() {\r\n  \r\n  return (\r\n    <div className=\"profile\">\r\n      <Header />\r\n      <Charts />\r\n      <Repo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\nimport Home from \"./pages/home/Home\";\nimport Profile from \"./pages/profile/Profile\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/profile\">{!user ? <Home /> : <Profile />}</Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}